{
  "contractName": "Pausable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008054600160a860020a03191633179055610669806100256000396000f3fe6080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a811461007c5780635c975abb14610093578063715018a6146100bc5780638456cb59146100d1578063ce606ee0146100e6578063f2fde38b14610117575b600080fd5b34801561008857600080fd5b5061009161014a565b005b34801561009f57600080fd5b506100a861028a565b604080519115158252519081900360200190f35b3480156100c857600080fd5b506100916102ab565b3480156100dd57600080fd5b5061009161035f565b3480156100f257600080fd5b506100fb6104b5565b60408051600160a060020a039092168252519081900360200190f35b34801561012357600080fd5b506100916004803603602081101561013a57600080fd5b5035600160a060020a03166104c4565b600054600160a060020a031633146101a9576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60005474010000000000000000000000000000000000000000900460ff161515610243576040805160e560020a62461bcd02815260206004820152603c60248201527f5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c792060448201527f7768656e2074686520636f6e7472616374206973207061757365642e00000000606482015290519081900360840190fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a0316331461030a576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031633146103be576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60005474010000000000000000000000000000000000000000900460ff1615610457576040805160e560020a62461bcd02815260206004820152602481018290527f5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c792060448201527f7768656e2074686520636f6e7472616374206973206e6f74207061757365642e606482015290519081900360840190fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b600054600160a060020a03163314610523576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b61052c8161052f565b50565b600160a060020a03811615156105b5576040805160e560020a62461bcd02815260206004820152602c60248201527f43616e6e6f74207472616e73666572204f776e65727368697020746f2061646460448201527f726573732030783030302e2e0000000000000000000000000000000000000000606482015290519081900360840190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe46756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279206fa165627a7a723058207259253872cb3047a5451cd8be500e9edf06c5d31a5e7b0b369b0ca8066e84b50029",
  "deployedBytecode": "0x6080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a811461007c5780635c975abb14610093578063715018a6146100bc5780638456cb59146100d1578063ce606ee0146100e6578063f2fde38b14610117575b600080fd5b34801561008857600080fd5b5061009161014a565b005b34801561009f57600080fd5b506100a861028a565b604080519115158252519081900360200190f35b3480156100c857600080fd5b506100916102ab565b3480156100dd57600080fd5b5061009161035f565b3480156100f257600080fd5b506100fb6104b5565b60408051600160a060020a039092168252519081900360200190f35b34801561012357600080fd5b506100916004803603602081101561013a57600080fd5b5035600160a060020a03166104c4565b600054600160a060020a031633146101a9576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60005474010000000000000000000000000000000000000000900460ff161515610243576040805160e560020a62461bcd02815260206004820152603c60248201527f5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c792060448201527f7768656e2074686520636f6e7472616374206973207061757365642e00000000606482015290519081900360840190fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a0316331461030a576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031633146103be576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60005474010000000000000000000000000000000000000000900460ff1615610457576040805160e560020a62461bcd02815260206004820152602481018290527f5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c792060448201527f7768656e2074686520636f6e7472616374206973206e6f74207061757365642e606482015290519081900360840190fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b600054600160a060020a03163314610523576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b61052c8161052f565b50565b600160a060020a03811615156105b5576040805160e560020a62461bcd02815260206004820152602c60248201527f43616e6e6f74207472616e73666572204f776e65727368697020746f2061646460448201527f726573732030783030302e2e0000000000000000000000000000000000000000606482015290519081900360840190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe46756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279206fa165627a7a723058207259253872cb3047a5451cd8be500e9edf06c5d31a5e7b0b369b0ca8066e84b50029",
  "sourceMap": "162:964:3:-;;;259:5;238:26;;-1:-1:-1;;;;;;608:26:2;624:10;608:26;;;162:964:3;;;;;;",
  "deployedSourceMap": "162:964:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1022:102:3;;;;;;238:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:26:3;;;;;;;;;;;;;;;;;;;;;;1132:137:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1132:137:2;;;;832:100:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;832:100:3;;;;237:36:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:36:2;;;;;;;;-1:-1:-1;;;;;237:36:2;;;;;;;;;;;;;;1441:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1441:117:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1441:117:2;-1:-1:-1;;;;;1441:117:2;;;1022:102:3;782:13:2;;-1:-1:-1;;;;;782:13:2;768:10;:27;760:76;;;;;-1:-1:-1;;;;;760:76:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;760:76:2;;;;-1:-1:-1;;;;;760:76:2;;;;;;;;;;;;;;;656:6:3;;;;;;;648:79;;;;;;;-1:-1:-1;;;;;648:79:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1088:5;1079:14;;-1:-1:-1;;1079:14:3;;;1108:9;;;;1088:5;1108:9;1022:102::o;238:26::-;;;;;;;;;:::o;1132:137:2:-;782:13;;-1:-1:-1;;;;;782:13:2;768:10;:27;760:76;;;;;-1:-1:-1;;;;;760:76:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;760:76:2;;;;-1:-1:-1;;;;;760:76:2;;;;;;;;;;;;;;;1212:13;;;1193:33;;-1:-1:-1;;;;;1212:13:2;;;;1193:33;;;1260:1;1236:26;;-1:-1:-1;;1236:26:2;;;1132:137::o;832:100:3:-;782:13:2;;-1:-1:-1;;;;;782:13:2;768:10;:27;760:76;;;;;-1:-1:-1;;;;;760:76:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;760:76:2;;;;-1:-1:-1;;;;;760:76:2;;;;;;;;;;;;;;;418:6:3;;;;;;;417:7;409:84;;;;;-1:-1:-1;;;;;409:84:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:6;:13;;-1:-1:-1;;890:13:3;;;;;918:7;;;;890:6;918:7;832:100::o;237:36:2:-;;;-1:-1:-1;;;;;237:36:2;;:::o;1441:117::-;782:13;;-1:-1:-1;;;;;782:13:2;768:10;:27;760:76;;;;;-1:-1:-1;;;;;760:76:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;760:76:2;;;;-1:-1:-1;;;;;760:76:2;;;;;;;;;;;;;;;1522:29;1541:9;1522:18;:29::i;:::-;1441:117;:::o;1703:257::-;-1:-1:-1;;;;;1785:23:2;;;;1777:80;;;;;-1:-1:-1;;;;;1777:80:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1893:13;;;1872:46;;-1:-1:-1;;;;;1872:46:2;;;;1893:13;;;1872:46;;;1928:13;:25;;-1:-1:-1;;1928:25:2;-1:-1:-1;;;;;1928:25:2;;;;;;;;;;1703:257::o",
  "source": "pragma solidity 0.5.0;\n\nimport \"./Ownable.sol\";\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n    event Pause();\n    event Unpause();\n\n    bool public paused = false;\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused, \"The function may be called only when the contract is not paused.\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(paused, \"The function may be called only when the contract is paused.\");\n        _;\n    }\n\n    /**\n     * @dev called by the owner to pause, triggers stopped state\n     */\n    function pause() public onlyOwner whenNotPaused {\n        paused = true;\n        emit Pause();\n    }\n\n    /**\n     * @dev called by the owner to unpause, returns to normal state\n     */\n    function unpause() public onlyOwner whenPaused {\n        paused = false;\n        emit Unpause();\n    }\n}",
  "sourcePath": "/home/loic/dev/pledgeo/contracts/Pausable.sol",
  "ast": {
    "absolutePath": "/home/loic/dev/pledgeo/contracts/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        218
      ]
    },
    "id": 219,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 158,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "/home/loic/dev/pledgeo/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 159,
        "nodeType": "ImportDirective",
        "scope": 219,
        "sourceUnit": 157,
        "src": "24:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 160,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 156,
              "src": "183:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$156",
                "typeString": "contract Ownable"
              }
            },
            "id": 161,
            "nodeType": "InheritanceSpecifier",
            "src": "183:7:3"
          }
        ],
        "contractDependencies": [
          156
        ],
        "contractKind": "contract",
        "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
        "fullyImplemented": true,
        "id": 218,
        "linearizedBaseContracts": [
          218,
          156
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 163,
            "name": "Pause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "208:2:3"
            },
            "src": "197:14:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 165,
            "name": "Unpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:3"
            },
            "src": "216:16:3"
          },
          {
            "constant": false,
            "id": 168,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 218,
            "src": "238:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 166,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "238:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 167,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "259:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "399:112:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "417:7:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 171,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "418:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c79207768656e2074686520636f6e7472616374206973206e6f74207061757365642e",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "426:66:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_104f7cfc0584a7f55aeb05d06576db93f664903e17c932d3c2d5934e7c9ba79a",
                          "typeString": "literal_string \"The function may be called only when the contract is not paused.\""
                        },
                        "value": "The function may be called only when the contract is not paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_104f7cfc0584a7f55aeb05d06576db93f664903e17c932d3c2d5934e7c9ba79a",
                          "typeString": "literal_string \"The function may be called only when the contract is not paused.\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2237,
                        2238
                      ],
                      "referencedDeclaration": 2238,
                      "src": "409:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "409:84:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "409:84:3"
                },
                {
                  "id": 176,
                  "nodeType": "PlaceholderStatement",
                  "src": "503:1:3"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 178,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:3"
            },
            "src": "374:137:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "638:107:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "656:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c79207768656e2074686520636f6e7472616374206973207061757365642e",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "664:62:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bd1bfdf51c4bbca018c6a43cc90cb338ff4448abd598061741f205cb83b9be8",
                          "typeString": "literal_string \"The function may be called only when the contract is paused.\""
                        },
                        "value": "The function may be called only when the contract is paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bd1bfdf51c4bbca018c6a43cc90cb338ff4448abd598061741f205cb83b9be8",
                          "typeString": "literal_string \"The function may be called only when the contract is paused.\""
                        }
                      ],
                      "id": 180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2237,
                        2238
                      ],
                      "referencedDeclaration": 2238,
                      "src": "648:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "648:79:3"
                },
                {
                  "id": 185,
                  "nodeType": "PlaceholderStatement",
                  "src": "737:1:3"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 187,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:2:3"
            },
            "src": "616:129:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "880:52:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "890:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "899:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "890:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "890:13:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 198,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "918:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "EmitStatement",
                  "src": "913:12:3"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 190,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 189,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 103,
                  "src": "856:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "856:9:3"
              },
              {
                "arguments": null,
                "id": 192,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 191,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 178,
                  "src": "866:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "866:13:3"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:2:3"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:3"
            },
            "scope": 218,
            "src": "832:100:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "1069:55:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 209,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "1079:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1088:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1079:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:14:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 213,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "1108:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "EmitStatement",
                  "src": "1103:14:3"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state",
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 205,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 204,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 103,
                  "src": "1048:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1048:9:3"
              },
              {
                "arguments": null,
                "id": 207,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 206,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 187,
                  "src": "1058:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1058:10:3"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1038:2:3"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:0:3"
            },
            "scope": 218,
            "src": "1022:102:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 219,
        "src": "162:964:3"
      }
    ],
    "src": "0:1126:3"
  },
  "legacyAST": {
    "absolutePath": "/home/loic/dev/pledgeo/contracts/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        218
      ]
    },
    "id": 219,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 158,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "/home/loic/dev/pledgeo/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 159,
        "nodeType": "ImportDirective",
        "scope": 219,
        "sourceUnit": 157,
        "src": "24:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 160,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 156,
              "src": "183:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$156",
                "typeString": "contract Ownable"
              }
            },
            "id": 161,
            "nodeType": "InheritanceSpecifier",
            "src": "183:7:3"
          }
        ],
        "contractDependencies": [
          156
        ],
        "contractKind": "contract",
        "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
        "fullyImplemented": true,
        "id": 218,
        "linearizedBaseContracts": [
          218,
          156
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 163,
            "name": "Pause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "208:2:3"
            },
            "src": "197:14:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 165,
            "name": "Unpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:3"
            },
            "src": "216:16:3"
          },
          {
            "constant": false,
            "id": 168,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 218,
            "src": "238:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 166,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "238:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 167,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "259:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "399:112:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "417:7:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 171,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "418:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c79207768656e2074686520636f6e7472616374206973206e6f74207061757365642e",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "426:66:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_104f7cfc0584a7f55aeb05d06576db93f664903e17c932d3c2d5934e7c9ba79a",
                          "typeString": "literal_string \"The function may be called only when the contract is not paused.\""
                        },
                        "value": "The function may be called only when the contract is not paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_104f7cfc0584a7f55aeb05d06576db93f664903e17c932d3c2d5934e7c9ba79a",
                          "typeString": "literal_string \"The function may be called only when the contract is not paused.\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2237,
                        2238
                      ],
                      "referencedDeclaration": 2238,
                      "src": "409:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "409:84:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "409:84:3"
                },
                {
                  "id": 176,
                  "nodeType": "PlaceholderStatement",
                  "src": "503:1:3"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 178,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:3"
            },
            "src": "374:137:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "638:107:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "656:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c79207768656e2074686520636f6e7472616374206973207061757365642e",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "664:62:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bd1bfdf51c4bbca018c6a43cc90cb338ff4448abd598061741f205cb83b9be8",
                          "typeString": "literal_string \"The function may be called only when the contract is paused.\""
                        },
                        "value": "The function may be called only when the contract is paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bd1bfdf51c4bbca018c6a43cc90cb338ff4448abd598061741f205cb83b9be8",
                          "typeString": "literal_string \"The function may be called only when the contract is paused.\""
                        }
                      ],
                      "id": 180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2237,
                        2238
                      ],
                      "referencedDeclaration": 2238,
                      "src": "648:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "648:79:3"
                },
                {
                  "id": 185,
                  "nodeType": "PlaceholderStatement",
                  "src": "737:1:3"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 187,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:2:3"
            },
            "src": "616:129:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "880:52:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "890:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "899:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "890:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "890:13:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 198,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "918:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "EmitStatement",
                  "src": "913:12:3"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 190,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 189,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 103,
                  "src": "856:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "856:9:3"
              },
              {
                "arguments": null,
                "id": 192,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 191,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 178,
                  "src": "866:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "866:13:3"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:2:3"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:3"
            },
            "scope": 218,
            "src": "832:100:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "1069:55:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 209,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "1079:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1088:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1079:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:14:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 213,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "1108:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "EmitStatement",
                  "src": "1103:14:3"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state",
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 205,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 204,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 103,
                  "src": "1048:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1048:9:3"
              },
              {
                "arguments": null,
                "id": 207,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 206,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 187,
                  "src": "1058:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1058:10:3"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1038:2:3"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:0:3"
            },
            "scope": 218,
            "src": "1022:102:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 219,
        "src": "162:964:3"
      }
    ],
    "src": "0:1126:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-28T03:01:06.778Z",
  "devdoc": {
    "details": "Base contract which allows children to implement an emergency stop mechanism.",
    "methods": {
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    },
    "title": "Pausable"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}