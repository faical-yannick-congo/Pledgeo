{
  "contractName": "Pausable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008054600160a860020a03191633179055610669806100256000396000f3fe6080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a811461007c5780635c975abb14610093578063715018a6146100bc5780638456cb59146100d1578063ce606ee0146100e6578063f2fde38b14610117575b600080fd5b34801561008857600080fd5b5061009161014a565b005b34801561009f57600080fd5b506100a861028a565b604080519115158252519081900360200190f35b3480156100c857600080fd5b506100916102ab565b3480156100dd57600080fd5b5061009161035f565b3480156100f257600080fd5b506100fb6104b5565b60408051600160a060020a039092168252519081900360200190f35b34801561012357600080fd5b506100916004803603602081101561013a57600080fd5b5035600160a060020a03166104c4565b600054600160a060020a031633146101a9576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60005474010000000000000000000000000000000000000000900460ff161515610243576040805160e560020a62461bcd02815260206004820152603c60248201527f5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c792060448201527f7768656e2074686520636f6e7472616374206973207061757365642e00000000606482015290519081900360840190fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a0316331461030a576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031633146103be576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60005474010000000000000000000000000000000000000000900460ff1615610457576040805160e560020a62461bcd02815260206004820152602481018290527f5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c792060448201527f7768656e2074686520636f6e7472616374206973206e6f74207061757365642e606482015290519081900360840190fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b600054600160a060020a03163314610523576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b61052c8161052f565b50565b600160a060020a03811615156105b5576040805160e560020a62461bcd02815260206004820152602c60248201527f43616e6e6f74207472616e73666572204f776e65727368697020746f2061646460448201527f726573732030783030302e2e0000000000000000000000000000000000000000606482015290519081900360840190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe46756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279206fa165627a7a723058209c054a5b6a0ef7b09e3bc02682230c9df6dcdcd2df20c4e60ddc311e31a9e6cc0029",
  "deployedBytecode": "0x6080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a811461007c5780635c975abb14610093578063715018a6146100bc5780638456cb59146100d1578063ce606ee0146100e6578063f2fde38b14610117575b600080fd5b34801561008857600080fd5b5061009161014a565b005b34801561009f57600080fd5b506100a861028a565b604080519115158252519081900360200190f35b3480156100c857600080fd5b506100916102ab565b3480156100dd57600080fd5b5061009161035f565b3480156100f257600080fd5b506100fb6104b5565b60408051600160a060020a039092168252519081900360200190f35b34801561012357600080fd5b506100916004803603602081101561013a57600080fd5b5035600160a060020a03166104c4565b600054600160a060020a031633146101a9576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60005474010000000000000000000000000000000000000000900460ff161515610243576040805160e560020a62461bcd02815260206004820152603c60248201527f5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c792060448201527f7768656e2074686520636f6e7472616374206973207061757365642e00000000606482015290519081900360840190fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a0316331461030a576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031633146103be576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b60005474010000000000000000000000000000000000000000900460ff1615610457576040805160e560020a62461bcd02815260206004820152602481018290527f5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c792060448201527f7768656e2074686520636f6e7472616374206973206e6f74207061757365642e606482015290519081900360840190fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b600054600160a060020a03163314610523576040805160e560020a62461bcd0281526020600482015260248082015260008051602061061e833981519152604482015260e160020a633bb732b902606482015290519081900360840190fd5b61052c8161052f565b50565b600160a060020a03811615156105b5576040805160e560020a62461bcd02815260206004820152602c60248201527f43616e6e6f74207472616e73666572204f776e65727368697020746f2061646460448201527f726573732030783030302e2e0000000000000000000000000000000000000000606482015290519081900360840190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe46756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279206fa165627a7a723058209c054a5b6a0ef7b09e3bc02682230c9df6dcdcd2df20c4e60ddc311e31a9e6cc0029",
  "sourceMap": "278:965:2:-;;;375:5;354:26;;-1:-1:-1;;;;;;602:26:1;618:10;602:26;;;278:965:2;;;;;;",
  "deployedSourceMap": "278:965:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1139:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1139:102:2;;;;;;354:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;354:26:2;;;;;;;;;;;;;;;;;;;;;;1126:137:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1126:137:1;;;;949:100:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;949:100:2;;;;237:28:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:28:1;;;;;;;;-1:-1:-1;;;;;237:28:1;;;;;;;;;;;;;;1435:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1435:109:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1435:109:1;-1:-1:-1;;;;;1435:109:1;;;1139:102:2;776:13:1;;-1:-1:-1;;;;;776:13:1;762:10;:27;754:76;;;;;-1:-1:-1;;;;;754:76:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;754:76:1;;;;-1:-1:-1;;;;;754:76:1;;;;;;;;;;;;;;;773:6:2;;;;;;;765:79;;;;;;;-1:-1:-1;;;;;765:79:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1205:5;1196:14;;-1:-1:-1;;1196:14:2;;;1225:9;;;;1205:5;1225:9;1139:102::o;354:26::-;;;;;;;;;:::o;1126:137:1:-;776:13;;-1:-1:-1;;;;;776:13:1;762:10;:27;754:76;;;;;-1:-1:-1;;;;;754:76:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;754:76:1;;;;-1:-1:-1;;;;;754:76:1;;;;;;;;;;;;;;;1206:13;;;1187:33;;-1:-1:-1;;;;;1206:13:1;;;;1187:33;;;1254:1;1230:26;;-1:-1:-1;;1230:26:1;;;1126:137::o;949:100:2:-;776:13:1;;-1:-1:-1;;;;;776:13:1;762:10;:27;754:76;;;;;-1:-1:-1;;;;;754:76:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;754:76:1;;;;-1:-1:-1;;;;;754:76:1;;;;;;;;;;;;;;;535:6:2;;;;;;;534:7;526:84;;;;;-1:-1:-1;;;;;526:84:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:6;:13;;-1:-1:-1;;1007:13:2;;;;;1035:7;;;;1007:6;1035:7;949:100::o;237:28:1:-;;;-1:-1:-1;;;;;237:28:1;;:::o;1435:109::-;776:13;;-1:-1:-1;;;;;776:13:1;762:10;:27;754:76;;;;;-1:-1:-1;;;;;754:76:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;754:76:1;;;;-1:-1:-1;;;;;754:76:1;;;;;;;;;;;;;;;1508:29;1527:9;1508:18;:29::i;:::-;1435:109;:::o;1689:249::-;-1:-1:-1;;;;;1763:23:1;;;;1755:80;;;;;-1:-1:-1;;;;;1755:80:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1871:13;;;1850:46;;-1:-1:-1;;;;;1850:46:1;;;;1871:13;;;1850:46;;;1906:13;:25;;-1:-1:-1;;1906:25:1;-1:-1:-1;;;;;1906:25:1;;;;;;;;;;1689:249::o",
  "source": "pragma solidity 0.5.0;\n\n//Requirement: Use a library - supports ownership features\nimport \"./Ownable.sol\";\n\n\n//Requirement: Implement emergency stop design pattern.\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n    event Pause();\n    event Unpause();\n\n    bool public paused = false;\n\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused, \"The function may be called only when the contract is not paused.\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(paused, \"The function may be called only when the contract is paused.\");\n        _;\n    }\n\n    /**\n     * @dev called by the owner to pause, triggers stopped state\n     */\n    function pause() public onlyOwner whenNotPaused {\n        paused = true;\n        emit Pause();\n    }\n\n    /**\n     * @dev called by the owner to unpause, returns to normal state\n     */\n    function unpause() public onlyOwner whenPaused {\n        paused = false;\n        emit Unpause();\n    }\n}",
  "sourcePath": "/home/loic/dev/pledgeo/contracts/Pausable.sol",
  "ast": {
    "absolutePath": "/home/loic/dev/pledgeo/contracts/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        206
      ]
    },
    "id": 207,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 146,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "/home/loic/dev/pledgeo/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 147,
        "nodeType": "ImportDirective",
        "scope": 207,
        "sourceUnit": 145,
        "src": "83:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 148,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 144,
              "src": "299:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$144",
                "typeString": "contract Ownable"
              }
            },
            "id": 149,
            "nodeType": "InheritanceSpecifier",
            "src": "299:7:2"
          }
        ],
        "contractDependencies": [
          144
        ],
        "contractKind": "contract",
        "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
        "fullyImplemented": true,
        "id": 206,
        "linearizedBaseContracts": [
          206,
          144
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 151,
            "name": "Pause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:2:2"
            },
            "src": "313:14:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 153,
            "name": "Unpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:2:2"
            },
            "src": "332:16:2"
          },
          {
            "constant": false,
            "id": 156,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 206,
            "src": "354:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 154,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "354:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 155,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "375:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "516:112:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "534:7:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 159,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "535:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c79207768656e2074686520636f6e7472616374206973206e6f74207061757365642e",
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "543:66:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_104f7cfc0584a7f55aeb05d06576db93f664903e17c932d3c2d5934e7c9ba79a",
                          "typeString": "literal_string \"The function may be called only when the contract is not paused.\""
                        },
                        "value": "The function may be called only when the contract is not paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_104f7cfc0584a7f55aeb05d06576db93f664903e17c932d3c2d5934e7c9ba79a",
                          "typeString": "literal_string \"The function may be called only when the contract is not paused.\""
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2160,
                        2161
                      ],
                      "referencedDeclaration": 2161,
                      "src": "526:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:84:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "526:84:2"
                },
                {
                  "id": 164,
                  "nodeType": "PlaceholderStatement",
                  "src": "620:1:2"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 166,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:2:2"
            },
            "src": "491:137:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "755:107:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "773:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c79207768656e2074686520636f6e7472616374206973207061757365642e",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "781:62:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bd1bfdf51c4bbca018c6a43cc90cb338ff4448abd598061741f205cb83b9be8",
                          "typeString": "literal_string \"The function may be called only when the contract is paused.\""
                        },
                        "value": "The function may be called only when the contract is paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bd1bfdf51c4bbca018c6a43cc90cb338ff4448abd598061741f205cb83b9be8",
                          "typeString": "literal_string \"The function may be called only when the contract is paused.\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2160,
                        2161
                      ],
                      "referencedDeclaration": 2161,
                      "src": "765:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "765:79:2"
                },
                {
                  "id": 173,
                  "nodeType": "PlaceholderStatement",
                  "src": "854:1:2"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 175,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:2:2"
            },
            "src": "733:129:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "997:52:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 182,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1007:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1016:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1007:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:13:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 186,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "1035:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "EmitStatement",
                  "src": "1030:12:2"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 178,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 177,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "973:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "973:9:2"
              },
              {
                "arguments": null,
                "id": 180,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 179,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 166,
                  "src": "983:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "983:13:2"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "963:2:2"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:2"
            },
            "scope": 206,
            "src": "949:100:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "1186:55:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1196:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1205:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1196:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:14:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 201,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "1225:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1225:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "EmitStatement",
                  "src": "1220:14:2"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state",
            "id": 205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 193,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 192,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "1165:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1165:9:2"
              },
              {
                "arguments": null,
                "id": 195,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 194,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 175,
                  "src": "1175:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1175:10:2"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:2:2"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:2"
            },
            "scope": 206,
            "src": "1139:102:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 207,
        "src": "278:965:2"
      }
    ],
    "src": "0:1243:2"
  },
  "legacyAST": {
    "absolutePath": "/home/loic/dev/pledgeo/contracts/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        206
      ]
    },
    "id": 207,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 146,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "/home/loic/dev/pledgeo/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 147,
        "nodeType": "ImportDirective",
        "scope": 207,
        "sourceUnit": 145,
        "src": "83:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 148,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 144,
              "src": "299:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$144",
                "typeString": "contract Ownable"
              }
            },
            "id": 149,
            "nodeType": "InheritanceSpecifier",
            "src": "299:7:2"
          }
        ],
        "contractDependencies": [
          144
        ],
        "contractKind": "contract",
        "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
        "fullyImplemented": true,
        "id": 206,
        "linearizedBaseContracts": [
          206,
          144
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 151,
            "name": "Pause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:2:2"
            },
            "src": "313:14:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 153,
            "name": "Unpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:2:2"
            },
            "src": "332:16:2"
          },
          {
            "constant": false,
            "id": 156,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 206,
            "src": "354:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 154,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "354:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 155,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "375:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "516:112:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "534:7:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 159,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "535:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c79207768656e2074686520636f6e7472616374206973206e6f74207061757365642e",
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "543:66:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_104f7cfc0584a7f55aeb05d06576db93f664903e17c932d3c2d5934e7c9ba79a",
                          "typeString": "literal_string \"The function may be called only when the contract is not paused.\""
                        },
                        "value": "The function may be called only when the contract is not paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_104f7cfc0584a7f55aeb05d06576db93f664903e17c932d3c2d5934e7c9ba79a",
                          "typeString": "literal_string \"The function may be called only when the contract is not paused.\""
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2160,
                        2161
                      ],
                      "referencedDeclaration": 2161,
                      "src": "526:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:84:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "526:84:2"
                },
                {
                  "id": 164,
                  "nodeType": "PlaceholderStatement",
                  "src": "620:1:2"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 166,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:2:2"
            },
            "src": "491:137:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "755:107:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "773:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652066756e6374696f6e206d61792062652063616c6c6564206f6e6c79207768656e2074686520636f6e7472616374206973207061757365642e",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "781:62:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bd1bfdf51c4bbca018c6a43cc90cb338ff4448abd598061741f205cb83b9be8",
                          "typeString": "literal_string \"The function may be called only when the contract is paused.\""
                        },
                        "value": "The function may be called only when the contract is paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bd1bfdf51c4bbca018c6a43cc90cb338ff4448abd598061741f205cb83b9be8",
                          "typeString": "literal_string \"The function may be called only when the contract is paused.\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2160,
                        2161
                      ],
                      "referencedDeclaration": 2161,
                      "src": "765:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "765:79:2"
                },
                {
                  "id": 173,
                  "nodeType": "PlaceholderStatement",
                  "src": "854:1:2"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 175,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:2:2"
            },
            "src": "733:129:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "997:52:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 182,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1007:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1016:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1007:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:13:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 186,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "1035:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "EmitStatement",
                  "src": "1030:12:2"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 178,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 177,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "973:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "973:9:2"
              },
              {
                "arguments": null,
                "id": 180,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 179,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 166,
                  "src": "983:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "983:13:2"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "963:2:2"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:2"
            },
            "scope": 206,
            "src": "949:100:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "1186:55:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1196:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1205:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1196:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:14:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 201,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "1225:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1225:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "EmitStatement",
                  "src": "1220:14:2"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state",
            "id": 205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 193,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 192,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "1165:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1165:9:2"
              },
              {
                "arguments": null,
                "id": 195,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 194,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 175,
                  "src": "1175:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1175:10:2"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:2:2"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:2"
            },
            "scope": 206,
            "src": "1139:102:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 207,
        "src": "278:965:2"
      }
    ],
    "src": "0:1243:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-26T00:44:39.158Z",
  "devdoc": {
    "details": "Base contract which allows children to implement an emergency stop mechanism.",
    "methods": {
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    },
    "title": "Pausable"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}